geom_polygon(data=map_data('county')%>%filter(region=="new york"), aes(long,lat,group=group), color="black", fill="lightblue")
runApp()
runApp()
ggplot()+
geom_polygon(data=map_data('county')%>%filter(region=="new york"), aes(long,lat,group=group), color="black", fill="white")
ggplot()+
geom_polygon(data=map_data('county'), aes(long,lat,group=group), color="black", fill="white")
ggplot(hospitals), aes(x=LONGITUDE, y=LATITUDE))+
stats_voronoi(geom="path",
outline=map_data("county"))
ggplot(hospitals), aes(x=LONGITUDE, y=LATITUDE))+
stat_voronoi(geom="path",
outline=map_data("county"))
ggplot(hospitals), aes(x=LONGITUDE, y=LATITUDE))+
stat_voronoi(geom="path",
outline=map_data("county"))
ggplot(hospitals)+ aes(x=LONGITUDE, y=LATITUDE))+
stat_voronoi(geom="path",
outline=map_data("county"))
ggplot(hospitals), aes(x=LONGITUDE,y=LATITUDE))+
stat_voronoi(geom="path",
outline = map_data("county")
ggplot(hospitals, aes(x=LONGITUDE,y=LATITUDE)) +
stat_voronoi(geom="path",
outline = map_data("county")
ggplot(hospitals %>% filter(STATE == "NY"), aes(x=LONGITUDE,y=LATITUDE)) +
stat_voronoi(geom="path",
outline = map_data("state") %>% filter(region=="new york"))+
geom_point(size = 1, stroke = 3, alpha=.2, color="green", fill="blue", shape=21)
ggplot(hospitals %>% filter(STATE == "NY"), aes(x=LONGITUDE,y=LATITUDE)) +
stat_voronoi(geom="path",
outline = map_data("state") %>% filter(region=="new york"))+
geom_point(size = 1, stroke = 3, alpha=.2, color="green", fill="blue", shape=21)
ggplot(hospitals,aes(x=LONGITUDE,y=LATITUDE)) +
stat_voronoi(geom="path",
outline = map_data("state"))
ggplot() +
geom_polygon(map_data("county"), aes(x=long, y=lat, group=group),
color="black", fill="lightblue" )
ggplot() +
geom_polygon(data=map_data("county"), aes(x=long, y=lat, group=group), color="black", fill="lightblue" )
ggplot() +
geom_polygon(data=map_data("county"), aes(x=long, y=lat, group=group), color="black", fill="lightred")
ggplot() +
geom_polygon(data=map_data("county"),
aes(x=long, y=lat, group=group),
color="black",
fill="#fcbfbb")
ggplot(hospitals, aes(x=LONGITUDE,y=LATITUDE)) +
stat_voronoi(geom="path",
outline = map_data("county"))+
theme(
panel.background = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
ggplot(hospitals, aes(x=LONGITUDE,y=LATITUDE)) +
stat_voronoi(geom="path",
outline = map_data("state"))
ggplot(hospitals%>%filter(region=="new york"), aes(x=LONGITUDE,y=LATITUDE, fill="#bbe9fc")) +
stat_voronoi(geom="path",
outline = map_data("state"))+
theme(
panel.background = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
ggplot(hospitals%>%filter(STATE=="NY"), aes(x=LONGITUDE,y=LATITUDE, fill="#bbe9fc")) +
stat_voronoi(geom="path",
outline = map_data("state"))+
theme(
panel.background = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
ggplot(hospitals%>%filter(STATE=="NY"), aes(x=LONGITUDE,y=LATITUDE, fill="#bbe9fc")) +
stat_voronoi(geom="path",
outline = map_data("state")%>%filter(region=="new york"))+
theme(
panel.background = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
ggplot(hospitals%>%filter(STATE=="NY"), aes(x=LONGITUDE,y=LATITUDE)) +
stat_voronoi(geom="path", fill="#bbe9fc",
outline = map_data("state")%>%filter(region=="new york"))+
theme(
panel.background = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
ggplot(hospitals%>%filter(STATE=="NY"), aes(x=LONGITUDE,y=LATITUDE, colour="#bbe9fc")) +
stat_voronoi(geom="path", fill="#bbe9fc",
outline = map_data("state")%>%filter(region=="new york"))+
theme(
panel.background = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
ggplot(hospitals%>%filter(STATE=="NY"), aes(x=LONGITUDE,y=LATITUDE, group="#bbe9fc")) +
stat_voronoi(geom="path", fill="#bbe9fc",
outline = map_data("state")%>%filter(region=="new york"))+
theme(
panel.background = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
ggplot(hospitals%>%filter(STATE=="NY"), aes(x=LONGITUDE,y=LATITUDE, group="#bbe9fc")) +
stat_voronoi(geom="path",
outline = map_data("state")%>%filter(region=="new york"))+
theme(
panel.background = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
ggplot(hospitals%>%filter(STATE=="NY"), aes(x=LONGITUDE,y=LATITUDE, fill="#bbe9fc")) +
stat_voronoi(geom="path",
outline = map_data("state")%>%filter(region=="new york"))+
theme(
panel.background = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
ggplot(hospitals%>%filter(STATE=="NY"), aes(x=LONGITUDE,y=LATITUDE, colour="#bbe9fc")) +
stat_voronoi(geom="path",
outline = map_data("state")%>%filter(region=="new york"))+
theme(
panel.background = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
ggplot(hospitals%>%filter(STATE=="NY"), aes(x=LONGITUDE,y=LATITUDE, colour="#bbe9fc")) +
geom_voronoi(
outline = map_data("state")%>%filter(region=="new york"))+
theme(
panel.background = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
ggplot(hospitals%>%filter(STATE=="NY"), aes(x=LONGITUDE,y=LATITUDE) +
ggplot(hospitals%>%filter(STATE=="NY"), aes(x=LONGITUDE,y=LATITUDE) +
geom_voronoi(aes(fill="#bbe9fc"), outline = map_data("state")%>%filter(region=="new york")))+
theme(
panel.background = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
ggplot(hospitals%>%filter(STATE=="NY"), aes(x=LONGITUDE,y=LATITUDE) +
geom_voronoi(aes(fill="#bbe9fc"), outline = map_data("state")%>%filter(region=="new york")))+
theme(
panel.background = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
ggplot(hospitals%>%filter(STATE=="NY"), aes(x=LONGITUDE,y=LATITUDE) +
geom_voronoi(aes(colour="#bbe9fc"), outline = map_data("state")%>%filter(region=="new york")))+
theme(
panel.background = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
ggplot(hospitals%>%filter(STATE=="NY"), aes(x=LONGITUDE,y=LATITUDE,)) +
stat_voronoi(geom="path",
outline = map_data("state")%>%filter(region=="new york"))+
theme(
panel.background = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
ggplot() +
geom_polygon(data=map_data("county"),
aes(x=long, y=lat, group=group),
color="black",
fill="#fcbfbb")+
theme(
panel.background = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
ggplot(hospitals, aes(x=LONGITUDE,y=LATITUDE,)) +
stat_voronoi(geom="path",
outline = map_data("state"))+
theme(
panel.background = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
ggsave("after.png", width = 20, height = 20, units = "cm")
ggsave("after.png", width = 20, height = 12, units = "cm")
ggplot() +
geom_polygon(data=map_data("county"),
aes(x=long, y=lat, group=group),
color="black",
fill="#fcbfbb")+
theme(
panel.background = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid = element_blank()
)
ggplot() +
geom_polygon(data=map_data("county"),
aes(x=long, y=lat, group=group),
color="black",
fill="#fcbfbb")+
theme(
panel.background = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.ticks = element_blank()
)
ggplot() +
geom_polygon(data=map_data("county"),
aes(x=long, y=lat, group=group),
color="black",
fill="#fcbfbb")+
theme(
panel.background = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text = element_blank()
)
ggplot(hospitals, aes(x=LONGITUDE,y=LATITUDE,)) +
stat_voronoi(geom="path",
outline = map_data("state"))+
theme(
panel.background = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank()
)
ggsave("after.png", width = 15, height = 8.5, units = "cm")
ggsave("after.png", width = 45, height = 25.5, units = "cm")
ggplot() +
geom_polygon(data=map_data("county"),
aes(x=long, y=lat, group=group),
color="black",
fill="#fcbfbb")+
theme(
panel.background = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank()
)
ggsave("before.png", width = 45, height = 25.5, units = "cm")
map_data(us)
map_data(usa)
map_data(usa) %>% view()
map_data("usa") %>% view()
ggplot(hospitals, aes(x=LONGITUDE,y=LATITUDE,)) +
stat_voronoi(geom="path",
outline = map_data("usa"))+
theme(
panel.background = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank()
)
ggsave("after.png", width = 45, height = 25.5, units = "cm")
install_github("Timag/shiny.slider")
library(devtools)
install_github("Timag/shiny.slider")
library(shiny.slider)
library(Timag/shiny.slider)
library(shiny.slider)
runApp()
ui <- fluidPage(
tags$script(src = "jquery-1.6.1.min.js"),
tags$script(src = "jquery-ui-1.8.13.custom.min.js"),
tags$script(src = "jquery.beforeafter-1.4.min.js"),
tags$script("
$(function() {
$('#slider').beforeAfter({
introDelay: 2000,
imagePath: 'img/',
introDuration: 500,
showFullLinks: false
})
});
"),
mainPanel(
tags$div(id = "slider",
img(src = "before.png", width = 800, height = 533),
img(src = "after.png", width = 800, height = 533))
)
runApp()
runApp()
runApp()
ui <- shinydashboard::dashboardPage(
dashboardHeader(title = "Hospital Voronoi"),
dashboardSidebar(),
dashboardBody(
box(width=9,
girafeOutput("map")),
box(title = "Controls", width=3,
selectInput("state", "Select state", states[,1]))
)
)
runApp()
shiny::runApp()
runApp()
library(shiny)
library(shinydashboard)
library(tidyverse)
library(ggvoronoi)
library(spData)
library(ggiraph)
runApp()
hospital = read.csv("hospitals.csv") %>%
filter(TYPE %in% c('CRITICAL ACCESS', 'GENERAL ACUTE CARE', 'LONG TERM CARE'))
hospitals = hospital
rm(hospital)
hospitals = read.csv("hospitals.csv") %>%
filter(TYPE %in% c('CRITICAL ACCESS', 'GENERAL ACUTE CARE', 'LONG TERM CARE'))
View(hospitals)
runApp()
runApp()
runApp()
ui <- fluidPage(
selectInput("var_y", "Y-Axis", choices = names(iris)),
plotOutput("distPlot", hover = "plot_hover", hoverDelay = 0),
uiOutput("dynamic")
)
ui <- fluidPage(
selectInput("var_y", "Y-Axis", choices = names(iris)),
plotOutput("distPlot", hover = "plot_hover", hoverDelay = 0),
uiOutput("dynamic")
)
server <- function(input, output) {
output$distPlot <- renderPlot({
req(input$var_y)
ggplot(iris, aes_string("Sepal.Width", input$var_y)) +
geom_point()
})
output$dynamic <- renderUI({
req(input$plot_hover)
verbatimTextOutput("vals")
})
output$vals <- renderPrint({
hover <- input$plot_hover
# print(str(hover)) # list
y <- nearPoints(iris, input$plot_hover)[input$var_y]
req(nrow(y) != 0)
y
})
}
shinyApp(ui = ui, server = server)
runApp()
runApp()
runApp()
hospitals %>% select(LATITUDE, LONGITUDE)
hospitals %>% filter(STATE == "NY") %>% select(NAME, LONGITUDE, LATITUDE)
hospitals %>% filter(STATE == "NY") %>% select(NAME, LONGITUDE, LATITUDE) %>%
between(LONGITUDE, -73, -76) & between(LATITUDE, 40,44)
hospitals[LONGITUDE %between% c(-73,-76) & LATITUDE %between% c(40,44)]
library(data.table)
hospitals[LONGITUDE %between% c(-73,-76) & LATITUDE %between% c(40,44)]
hospitals['LONGITUDE' %between% c(-73,-76) & 'LATITUDE' %between% c(40,44)]
hospitals['LONGITUDE' %between% c(-73,-76)]
hospitals
hospitals$LONGITUDE %>%
between(-70,-74)
hospitals$LONGITUDE[between(hospitals$LONGITUDE, -70, -74)]
hospitals$LONGITUDE[between(hospitals$LONGITUDE, -74, -70)]
hospitals %>% filter(STATE == "NY") %>% select(LONGITUDE, LATITUDE, NAME)
hospitals %>% filter(STATE == "NY") %>% select(LONGITUDE, LATITUDE, NAME) %>%
filter(between(LONGITUDE, -74, -70))
hospitals %>% filter(STATE == "NY") %>% select(LONGITUDE, LATITUDE, NAME) %>%
filter(between(LONGITUDE, -74, -70), between(LATITUDE, 40, 44))
hospitals %>% filter(STATE == "NY") %>% select(LONGITUDE, LATITUDE, NAME) %>%
filter(between(LONGITUDE, -74, -70) & between(LATITUDE, 40, 44))
hospitals %>% filter(STATE == "NY") %>% select(LONGITUDE, LATITUDE, NAME) %>%
filter(between(LONGITUDE, -76, -70) & between(LATITUDE, 40, 44))
hospitals %>% filter(STATE == "NY") %>% select(LONGITUDE, LATITUDE, NAME) %>%
filter(between(LONGITUDE, -72, -70) & between(LATITUDE, 40, 44))
hospitals %>% filter(STATE == "NY") %>% select(LONGITUDE, LATITUDE, NAME) %>%
filter(between(LONGITUDE, -74, -70) & between(LATITUDE, 40, 44))
runApp()
runApp()
runApp()
hospitals %>% unique(TYPE)
hospitals %>% distinct(TYPE)
runApp()
runApp()
hospitals %>% filter(TYPE == c("GENERAL ACUTE CARE", "LONG TERM CARE"))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
hospital = read.csv("hospitals.csv") %>%
filter(TYPE %in% c('CRITICAL ACCESS', 'GENERAL ACUTE CARE', 'LONG TERM CARE')) %>%
mutate(color = case_when(TYPE == 'CRITICAL ACCESS' ~ "#eb3483",
TYPE == 'LONG TERM CARE' ~ "#343deb",
TYPE == 'GENERAL ACUTE CARE' ~ "#34eb43"))
View(hospital)
runApp()
runApp()
runApp()
hospitals = hospital
runApp()
runApp()
hospital = read.csv("hospitals.csv") %>%
filter(TYPE %in% c('CRITICAL ACCESS', 'GENERAL ACUTE CARE', 'LONG TERM CARE')) %>%
mutate(TYPECOLOR = case_when(TYPE == 'CRITICAL ACCESS' ~ "#eb3483",
TYPE == 'LONG TERM CARE' ~ "#343deb",
TYPE == 'GENERAL ACUTE CARE' ~ "#34eb43"))
hospitals = hospital
runApp()
runApp()
ggplot(hospitals %>% filter(STATE == "NY")), aes(x=LONGITUDE,y=LATITUDE) +
geom_point(color=TYPECOLOR)
ggplot(hospitals %>% filter(STATE == "NY")), aes(x=LONGITUDE,y=LATITUDE) +
geom_point(color="black")
ggplot(hospitals %>% filter(STATE == "NY")), aes(x=LONGITUDE,y=LATITUDE) +
geom_point(color="black")
ggplot(hospitals %>% filter(STATE == "NY")), aes(x=LONGITUDE,y=LATITUDE) +
geom_point(color="black")
ggplot(hospitals %>% filter(STATE == "NY"), aes(x=LONGITUDE,y=LATITUDE)) +
geom_point(color="black")
ggplot(hospitals %>% filter(STATE == "NY"), aes(x=LONGITUDE,y=LATITUDE)) +
geom_point(color=TYPECOLOR)
ggplot(hospitals %>% filter(STATE == "NY"), aes(x=LONGITUDE,y=LATITUDE)) +
geom_point(color="#34eb43")
ggplot(hospitals %>% filter(STATE == "NY"), aes(x=LONGITUDE,y=LATITUDE)) +
geom_point(color=TYPECOLOR)
ggplot(hospitals %>% filter(STATE == "NY"), aes(x=LONGITUDE,y=LATITUDE, color=TYPECOLOR)) +
geom_point()
runApp()
ggplot(hospitals %>% filter(STATE == stateAbbv(),
TYPE %in% c(input$checklist)),
aes(x=LONGITUDE,y=LATITUDE, color=TYPECOLOR))+
mapT()+
geom_point(size = 1,
stroke = 3,
alpha=.3,
shape=21) +
theme(panel.background = element_blank(),
plot.margin = margin(.1,.1,.1,.1,"cm"),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
hospital = read.csv("hospitals.csv") %>%
filter(TYPE %in% c('CRITICAL ACCESS', 'GENERAL ACUTE CARE', 'LONG TERM CARE')) %>%
mutate(TYPECOLOR = case_when(TYPE == 'CRITICAL ACCESS' ~ "#eb3483",
TYPE == 'LONG TERM CARE' ~ "#fcf803",
TYPE == 'GENERAL ACUTE CARE' ~ "#34eb43"))
runApp()
hospitals = hospital
runApp()
hospital = read.csv("hospitals.csv") %>%
filter(TYPE %in% c('CRITICAL ACCESS', 'GENERAL ACUTE CARE', 'LONG TERM CARE')) %>%
mutate(TYPECOLOR = case_when(TYPE == 'CRITICAL ACCESS' ~ "#eb3483",
TYPE == 'LONG TERM CARE' ~ "#fcf803",
TYPE == 'GENERAL ACUTE CARE' ~ "#34eb43"))
hospitals = hospital
server = function(input, output) {
hospitals = hospital
stateAbbv = reactive({
states %>% filter(region == input$state) %>% pull(abbv)
})
mapT <- reactive({
if(input$switch == "New") {
stat_voronoi(geom="path",
outline = map_data("state") %>% filter(region==input$state),
color="black")
}
else if (input$switch == "Original"){
geom_polygon(data=map_data("county")%>%filter(region==input$state),
aes(x=long, y=lat, group=group),
color="black",
fill="white")
}
})
output$map = renderPlot({
ggplot(hospitals %>% filter(STATE == stateAbbv(),
TYPE %in% c(input$checklist)),
aes(x=LONGITUDE,y=LATITUDE, color=TYPECOLOR))+
mapT()+
geom_point(size = 1,
stroke = 2,
alpha=1,
fill="black",
shape=21) +
theme(panel.background = element_blank(),
plot.margin = margin(.1,.1,.1,.1,"cm"),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
})
output$info <- renderText({
paste0("x=", input$add_hospital$x, "\ny=", input$add_hospital$y)
})
output$dynamic <- renderUI({
req(input$plot_hover)
verbatimTextOutput("vals")
})
output$vals <- renderPrint({
hospitals %>% filter(STATE == stateAbbv(),
between(LONGITUDE, input$plot_hover$xmin, input$plot_hover$xmax) &
between(LATITUDE, input$plot_hover$ymin, input$plot_hover$ymax)) %>%
select(NAME, LONGITUDE, LATITUDE)
})
observeEvent(input$reset, {
hospitals = hospital
})
runApp()
runApp()
